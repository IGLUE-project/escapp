<div id="modalCatalogResource" class="modalCatalogResource">
    <div class="modalContainer">
        <div class="modalTitle">
            <h5 style="font-size: 1em; margin-top: 0px">
                <%=i18n.escapeRoom.steps.indications.front.catalog.addResource%>
            </h5>

            <span class="building-block-icon material-icons" onclick="toggleCatalogModal()"> close </span>

        </div>
        <div style="margin: 4rem"></div>
        <div class="sections">
        <section class="sectionAddResource">
            <p class="title-section ">Elementos de gamificación</p>
            <div class="btn-group">
                <button onclick='insertGamification(0,"countdown",{}, puzzleList)' class="resourceCatalogBtn">
                    <span class="building-block-icon material-icons"> add </span>
                    <p><%=i18n.escapeRoom.steps.indications.front.countdown%></p>
                    <img class="building-block-img" src="/images/countdown.png" />
                </button>
                <button onclick='insertGamification(0,"ranking",{}, puzzleList)' class="resourceCatalogBtn">
                    <span class="building-block-icon material-icons"> add </span>
                    <p><%=i18n.escapeRoom.steps.indications.front.ranking%></p>
                    <img class="building-block-img" src="/images/ranking.png" />
                </button>
                <button onclick='insertGamification(0,"progress",{}, puzzleList)' class="resourceCatalogBtn">
                    <span class="building-block-icon material-icons"> add </span>
                    <p><%=i18n.escapeRoom.steps.indications.front.progress%></p>
                    <span class="building-block-icon material-icons" style="color: var(--lightred);">
                        show_chart </span>
                </button>
            </div>
        </section>
        <section class="sectionAddResource">
            <p class="title-section">Recursos interactivos vinculados a retos</p>
            <div class="resources-group">
                    <%availableReusablePuzzles.forEach(puzzle => {let goodConfig; try{ goodConfig = JSON.parse(puzzle.config);}catch(e){ console.error("Error parsing JSON:", puzzle.config); }%>
                     <div class="resource-card">
                        <% if( goodConfig && goodConfig?.puzzleConfig?.thumbnail) {%>
                            <img src="/uploads/reusablePuzzles/<%=puzzle.id%>/<%=goodConfig?.puzzleConfig?.thumbnail%>"/>
                        <%} else{%>
                            <img src="/images/keypad.png"/>
                        <%} %>
                        <button class="resourceCatalogBtn" onclick="openPuzzleConfiguration(<%=JSON.stringify(puzzle)%>,<%= puzzle.id%> )">
                            <span class="building-block-icon material-icons"> add </span>
                            <p><%=puzzle.name%></p>
                        </button>
                    </div>
                <% })%>
            </div>
        </section>

        <section class="sectionAddResource">
            <p class="title-section">Escenarios 2D</p>
            <div class="resource-card" id="scenery">
                <img src="/images/scenery.png">
                <button class="resourceCatalogBtn">
                    <span class="building-block-icon material-icons"> add </span>
                    <p>Escenarios 2D</p>
                </button>
            </div>
        </section>
        <section id="configZone" hidden>
            <h2>Configuración</h2>
            <form action="reusablePuzzleInstance" method="POST" id="configForm">
            </form>
        </section>
    </div>
    </div>
</div>
<div id="resourceCatalog" style="display:flex;align-items:end;flex-direction:column">
    <div style="width:100%">
        <div style="display: flex; justify-content:end; margin-bottom:0.2em; gap: 0.7rem">
                <% if ((endPoint !== "indications") && (endPoint !== "after")) {%>
                    <button class="building-block-bar-button uploadButton" onclick="toggleCatalogModal()">
                        <a href="#">
                            <span class="building-block-icon material-icons"> add </span>
                            <p>
                                <%=i18n.escapeRoom.steps.indications.front.catalog.addResource%>
                            </p>
                        </a>
                    </button>
                    <button class="building-block-bar-button uploadButton">
                        <a href="assets?mode=catalogView">
                            <span class="building-block-icon material-icons"> upload </span>
                            <p>
                                <%=i18n.escapeRoom.steps.indications.front.catalog.uploadFile%>
                            </p>
                        </a>
                    </button>
                <% } %>

        </div>
    </div>
    <div style="height:240px;overflow-y:auto;width:100%;position:relative">

        <table style="width:100%;table-layout:fixed; padding: 16px" class="tab-content catalog-container"
            id="myTabContent">
            <colgroup>
                <col span="1" style="width: 50%;">
                <col span="1" style="width: 20%;">
                <col span="1" style="width: 30%;">
            </colgroup>
            <% if(assets.length != 0) {%>
            <tr class="tableTitles">
                <th>
                    <%=i18n.escapeRoom.steps.indications.front.catalog.table.name%>
                </th>
                <th>
                    <%=i18n.escapeRoom.steps.indications.front.catalog.table.type%>
                </th>
                <th></th>
            </tr>
            <% } %>
            <%if(endPoint==="team" ){reusablePuzzlesInstances.map(puzzle=> {%>
                <%let goodConfig={}; try{ goodConfig = JSON.parse(puzzle.config)}catch(e){ console.error("Error parsing JSON:", puzzle.config); }%>
                <tr id="p-<%=puzzle.id%>" class="catalogItem">
                    <td>
                        <p class="title">
                            <%=puzzle.name%>
                        </p>
                    </td>
                    <td> <span class="building-block-icon material-icons" id="green"> videogame_asset </span>
                    </td>
                    <td>
                        <div class=" button-group row-button">
                            <div class="overlay-trigger" data-id="<%=puzzle.id%>">
                                <p class="text-overlay">¿Estás seguro de que quieres borrar este
                                    archivo?</p>
                                <button class="deleteButton" type="button"
                                    onclick='overlayTriggerCatalog("<%=puzzle.id%>", true)'>cancelar</button>
                                <button class="acceptButton" type="button"
                                    onclick='deleteReusablePuzzleInstance("<%=puzzle.id%>")'>aceptar</button>
                            </div>
                            <button class="listButton iconButton delete-button"
                                onclick="overlayTriggerCatalog('<%=puzzle.id%>', false)">
                                <span class="building-block-icon material-icons" id="delete">
                                    delete_outline </span>
                            </button>
                            <button class="listButton iconButton editButton"
                                onclick="editPuzzle('<%=puzzle.id%>', 'application/reusable', <%=JSON.stringify({reusablePuzzleId:puzzle.reusablePuzzleId, name:puzzle.name, description:puzzle.description, id:puzzle.id, config:puzzle.config})%>)">
                                <span class="building-block-icon material-icons" id="edit"> edit
                                </span>
                            </button>
                            <button class="listButton linkButton" onclick='copyURl("<%=puzzle.url%>")'>
                                <span class="building-block-icon material-icons" id="link"> link
                                </span>
                                <div class="tooltip-link"> Copiar enlace </div>
                                <div class="tooltip-link" id="link-copied">
                                    <%=i18n.escapeRoom.steps.indications.front.catalog.copied%>
                                </div>
                            </button>

                            <button class="listButton addButton"
                                onclick='insertAndScrollContent(0,"catalog",{url:`/escapeRooms/${escapeRoomId}/reusablePuzzleInstances/<%=puzzle.id%>/render`, puzzleId:"<%=puzzle.id%>",  config: <%=JSON.stringify(puzzle.config)%>,  mime:"application/reusable"}, puzzleList)'>
                                <span class="building-block-icon material-icons" id="add"> add
                                </span>
                                <p>
                                    <%=i18n.escapeRoom.steps.indications.front.catalog.addBlock%>
                                </p>
                            </button>
                            </div>
                    </td>
                </tr>
                <% })} %>
                    <% if(assets.length === 0) {%>
                        <tr class="catalogItem">
                            <td colspan="3" style="text-align: center; height:200px">
                                <p class="title">
                                    <%=i18n.escapeRoom.steps.indications.front.catalog.table.noResources%>
                                </p>
                            </td>
                        </tr>
                    <% } %>
                    <% assets.map(asset=> {%>
                        <% if (asset.mime.search(new RegExp(/image\/.*/))!==-1){ %>
                            <tr class="catalogItem" id=<%=asset.id%> >
                                <td>
                                    <p class="title">
                                        <%=asset.filename%>
                                    </p>
                                </td>
                                <td> <span class="building-block-icon material-icons" id="green"> image </span>
                                </td>
                                <td>
                                    <div class=" button-group row-button">
                                        <div class="overlay-trigger" data-id="<%=asset.id%>">
                                            <p class="text-overlay">¿Estás seguro de que quieres borrar este
                                                archivo?</p>
                                            <button class="deleteButton" type="button"
                                                onclick='overlayTriggerCatalog("<%=asset.id%>", true)'>cancelar</button>
                                            <button class="acceptButton" type="button"
                                                onclick='deleteAsset("<%=asset.id%>")'>aceptar</button>
                                        </div>
                                        <button class="listButton iconButton delete-button"
                                            onclick="overlayTriggerCatalog('<%=asset.id%>', false)">
                                            <span class="building-block-icon material-icons" id="delete">
                                                delete_outline </span>
                                        </button>
                                        <button class="listButton iconButton editButton"
                                            onclick='editAsset("<%=asset.id%>", "<%=asset.mime%>", "<%=asset.config%>")'>
                                            <span class="building-block-icon material-icons" id="edit"> edit
                                            </span>
                                        </button>
                                        <button class="listButton linkButton" onclick='copyURl("<%=asset.url%>")'>
                                            <span class="building-block-icon material-icons" id="link"> link
                                            </span>
                                            <div class="tooltip-link"> Copiar enlace </div>
                                            <div class="tooltip-link" id="link-copied">
                                                <%=i18n.escapeRoom.steps.indications.front.catalog.copied%>
                                            </div>
                                        </button>

                                        <button class="listButton addButton"
                                            onclick='insertAndScrollContent(0,"catalog",{url:"<%=asset.url%>",config: "<%=asset.config%>",  mime:"<%=asset.mime%>"}, puzzleList)'>
                                            <span class="building-block-icon material-icons" id="add"> add
                                            </span>
                                            <p>
                                                <%=i18n.escapeRoom.steps.indications.front.catalog.addBlock%>
                                            </p>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                            <% } else if (asset.mime.search(new RegExp(/video\/.*/))!==-1){ %>
                                <tr class="catalogItem" id=<%=asset.id%> >
                                    <td>
                                        <p class="title">
                                            <%=asset.filename%>
                                        </p>
                                    </td>
                                    <td> <span class="building-block-icon material-icons" id="red"> videocam
                                        </span> </td>
                                    <td>
                                        <div class=" button-group row-button">
                                            <div class=" overlay-trigger" data-id="<%=asset.id%>">
                                                <p class="text-overlay">¿Estás seguro de que quieres borrar este
                                                    archivo?</p>
                                                <button class="deleteButton" type="button"
                                                    onclick='overlayTriggerCatalog("<%=asset.id%>", true)'>cancelar</button>
                                                <button class="acceptButton" type="button"
                                                    onclick='deleteAsset("<%=asset.id%>")'>aceptar</button>
                                            </div>
                                            <button class="listButton iconButton delete-button"
                                                onclick="overlayTriggerCatalog('<%=asset.id%>', false)">
                                                <span class="building-block-icon material-icons" id="delete">
                                                    delete_outline </span>
                                            </button>
                                            <button class="listButton iconButton editButton"
                                                onclick='editAsset("<%=asset.id%>", "<%=asset.mime%>", "<%=asset.config%>")'>
                                                <span class="building-block-icon material-icons" id="edit"> edit
                                                </span>
                                            </button>
                                            <button class="listButton linkButton" onclick='copyURl("<%=asset.url%>")'>
                                                <span class="building-block-icon material-icons" id="link"> link
                                                </span>
                                                <div class="tooltip-link"> Copiar enlace </div>
                                                <div class="tooltip-link" id="link-copied">
                                                    <%=i18n.escapeRoom.steps.indications.front.catalog.copied%>
                                                </div>
                                            </button>
                                            <button class="listButton addButton"
                                                onclick='insertAndScrollContent(0,"catalog",{url:"<%=asset.url%>",config: "<%=asset.config%>",  mime:"<%=asset.mime%>"}, puzzleList)'>
                                                <span class="building-block-icon material-icons" id="add"> add
                                                </span>
                                                <p>
                                                    <%=i18n.escapeRoom.steps.indications.front.catalog.addBlock%>
                                                </p>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                <% } else if (asset.mime.search(new RegExp(/audio\/.*/))!==-1){ %>
                                    <tr class="catalogItem" id=<%=asset.id%> >
                                        <td>
                                            <p class="title">
                                                <%=asset.filename%>
                                            </p>
                                        </td>
                                        <td> <span class="building-block-icon material-icons " id="purple">
                                                music_note </span> </td>
                                        <td>
                                            <div class=" button-group row-button">
                                                <div class=" overlay-trigger" data-id="<%=asset.id%>">
                                                    <p class="text-overlay">¿Estás seguro de que quieres borrar
                                                        este
                                                        archivo?</p>
                                                    <button class="deleteButton" type="button"
                                                        onclick='overlayTriggerCatalog("<%=asset.id%>", true)'>cancelar</button>
                                                    <button class="acceptButton" type="button"
                                                        onclick='deleteAsset("<%=asset.id%>")'>aceptar</button>
                                                </div>
                                                <button class="listButton iconButton delete-button"
                                                    onclick="overlayTriggerCatalog('<%=asset.id%>', false)">
                                                    <span class="building-block-icon material-icons" id="delete">
                                                        delete_outline </span>
                                                </button>
                                                <button class="listButton iconButton editButton"
                                                    onclick='editAsset("<%=asset.id%>", "<%=asset.mime%>", "<%=asset.config%>")'>
                                                    <span class="building-block-icon material-icons" id="edit">
                                                        edit
                                                    </span>
                                                </button>
                                                <button class="listButton linkButton"
                                                    onclick='copyURl("<%=asset.url%>")'>
                                                    <span class="building-block-icon material-icons" id="link">
                                                        link
                                                    </span>
                                                    <div class="tooltip-link"> Copiar enlace </div>
                                                    <div class="tooltip-link" id="link-copied">
                                                        <%=i18n.escapeRoom.steps.indications.front.catalog.copied%>
                                                    </div>
                                                </button>
                                                <button class="listButton addButton"
                                                    onclick='insertAndScrollContent(0,"catalog",{url:"<%=asset.url%>",config: "<%=asset.config%>",  mime:"<%=asset.mime%>"}, puzzleList)'>
                                                    <span class="building-block-icon material-icons" id="add">
                                                        add
                                                    </span>
                                                    <p>
                                                        <%=i18n.escapeRoom.steps.indications.front.catalog.addBlock%>
                                                    </p>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    <% } else if (asset.mime.search(new RegExp(/application\/pdf/))!==-1){ %>
                                        <tr class="catalogItem" id=<%=asset.id%> >
                                            <td>
                                                <p class=" title">
                                                    <%=asset.filename%>
                                                </p>
                                            </td>
                                            <td> <span class="building-block-icon material-icons" id="blue">
                                                    description </span> </td>
                                            <td>
                                                <div class=" button-group row-button">
                                                    <div class=" overlay-trigger" data-id="<%=asset.id%>">
                                                        <p class="text-overlay">¿Estás seguro de que quieres
                                                            borrar este
                                                            archivo?</p>
                                                        <button class="deleteButton" type="button"
                                                            onclick='overlayTriggerCatalog("<%=asset.id%>", true)'>cancelar</button>
                                                        <button class="acceptButton" type="button"
                                                            onclick='deleteAsset("<%=asset.id%>")'>aceptar</button>
                                                    </div>
                                                    <button class="listButton iconButton delete-button"
                                                        onclick="overlayTriggerCatalog('<%=asset.id%>', false)">
                                                        <span class="building-block-icon material-icons" id="delete">
                                                            delete_outline </span>
                                                    </button>
                                                    <button class="listButton iconButton editButton"
                                                        onclick='editAsset("<%=asset.id%>", "<%=asset.mime%>", "<%=asset.config%>")'>
                                                        <span class="building-block-icon material-icons" id="edit"> edit
                                                        </span>
                                                    </button>
                                                    <button class="listButton linkButton"
                                                        onclick='copyURl("<%=asset.url%>")'>
                                                        <span class="building-block-icon material-icons" id="link"> link
                                                        </span>
                                                        <div class="tooltip-link"> Copiar enlace </div>
                                                        <div class="tooltip-link" id="link-copied">
                                                            <%=i18n.escapeRoom.steps.indications.front.catalog.copied%>
                                                        </div>
                                                    </button>

                                                    <button class="listButton addButton"
                                                        onclick='insertAndScrollContent(0,"catalog",{url:"<%=asset.url%>",config: "<%=asset.config%>",  mime:"<%=asset.mime%>"}, puzzleList)'>
                                                        <span class="building-block-icon material-icons" id="add"> add
                                                        </span>
                                                        <p>
                                                            <%=i18n.escapeRoom.steps.indications.front.catalog.addBlock%>
                                                        </p>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    <% } else if (asset.mime.search(new RegExp(/application\/webapp/))!==-1 && endPoint !== "indications" && endPoint !== "after"){ %>
                                        <tr class="catalogItem" id=<%=asset.id%> >
                                            <td>
                                                <p class=" title">
                                                    <%=asset.filename%>
                                                </p>
                                            </td>
                                            <td> <span class="building-block-icon material-icons" id="purple">
                                                    terminal </span> </td>
                                            <td>
                                                <div class=" button-group row-button">
                                                    <div class=" overlay-trigger" data-id="<%=asset.id%>">
                                                        <p class="text-overlay">¿Estás seguro de que quieres
                                                            borrar este
                                                            archivo?</p>
                                                        <button class="deleteButton" type="button"
                                                            onclick='overlayTriggerCatalog("<%=asset.id%>", true)'>cancelar</button>
                                                        <button class="acceptButton" type="button"
                                                            onclick='deleteAsset("<%=asset.id%>")'>aceptar</button>
                                                    </div>
                                                    <button class="listButton iconButton delete-button"
                                                        onclick="overlayTriggerCatalog('<%=asset.id%>', false)">
                                                        <span class="building-block-icon material-icons" id="delete">
                                                            delete_outline </span>
                                                    </button>
                                                    <button class="listButton iconButton editButton"
                                                        onclick='editAsset("<%=asset.id%>", "<%=asset.mime%>", "<%=asset.config%>")'>
                                                        <span class="building-block-icon material-icons" id="edit"> edit
                                                        </span>
                                                    </button>
                                                    <button class="listButton linkButton"
                                                        onclick='copyURl("<%=asset.url%>")'>
                                                        <span class="building-block-icon material-icons" id="link"> link
                                                        </span>
                                                        <div class="tooltip-link"> Copiar enlace </div>
                                                        <div class="tooltip-link" id="link-copied">
                                                            <%=i18n.escapeRoom.steps.indications.front.catalog.copied%>
                                                        </div>
                                                    </button>

                                                    <button class="listButton addButton"
                                                        onclick='insertAndScrollContent(0,"catalog",{url:"<%=asset.url%>",config: "<%=asset.config%>",  mime:"<%=asset.mime%>"}, puzzleList)'>
                                                        <span class="building-block-icon material-icons" id="add"> add
                                                        </span>
                                                        <p>
                                                            <%=i18n.escapeRoom.steps.indications.front.catalog.addBlock%>
                                                        </p>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                        <% } else { %>

                                        <!-- Mirar si queremos poner elementos desconocidos
                                            <tr class="catalogItem" id=<%=asset.id%> >
                                                <td>
                                                    <p class="title">
                                                        <%=asset.filename%>
                                                    </p>
                                                    <div class=" button-group row-button">
                                                </td>
                                                <td> <span class="building-block-icon material-icons" id="gray">
                                                        question_mark </span> </td>
                                                <td>
                                                    <div class=" overlay-trigger" data-id="<%=asset.id%>">
                                                        <p class="text-overlay">¿Estás seguro de que quieres
                                                            borrar
                                                            este
                                                            archivo?</p>
                                                        <button class="delete-button" type="button"
                                                            onclick='overlayTriggerCatalog("<%=asset.id%>", true)'>cancelar</button>
                                                        <button class="acceptButton" type="button"
                                                            onclick='deleteAsset("<%=asset.id%>")'>aceptar</button>
                                                    </div>
                                                    <button class="listButton iconButton delete-button"
                                                        onclick='overlayTriggerCatalog("<%=asset.id%>")'>
                                                        <span class="building-block-icon material-icons" id="delete">
                                                            delete_outline </span>
                                                    </button>
                                                    <button class="listButton iconButton editButton" disabled>
                                                        <span class="building-block-icon material-icons" id="edit">
                                                            edit
                                                        </span>
                                                    </button>
                                                    <button class="listButton linkButton"
                                                        onclick='copyURl("<%=asset.url%>")'>
                                                        <span class="building-block-icon material-icons" id="link">
                                                            link
                                                        </span>
                                                        <div class="tooltip-link"> Copiar enlace </div>
                                                        <div class="tooltip-link" id="link-copied">
                                                            <%=i18n.escapeRoom.steps.indications.front.catalog.copied%>
                                                        </div>
                                                    </button>
                                                    <button class="listButton addButton" disabled> <span
                                                            class="building-block-icon material-icons" id="add">
                                                            add
                                                        </span>
                                                        <p>
                                                            <%=i18n.escapeRoom.steps.indications.front.catalog.addBlock%>
                                                        </p>
                                                    </button>
                </div>
                </td>

                </tr>
    -->
    <% } return null;%>
        <% }) %>
            </table>

</div>
<div style="display:flex; margin-top:0.5em; align-items:center; justify-content: end; gap: 0.7rem">

    <% if ((endPoint !== "indications") && (endPoint !== "after")) {%>
    <button class="building-block-bar-button theme-btn" style="display:flex;">
        <span class="building-block-icon material-icons" style="color: var(--info);">color_lens</span>
        <span class="theme-text">
            <%=i18n.escapeRoom.steps.indications.front.theme%>: <span id="theme-title">
                    <%=theme[0].toUpperCase() + theme.slice(1)%>
                </span>
        </span>
    </button>
    <% } %>
    <button class="addButton text-block-add" id="buttonMain" onclick="insertContentBlock()">
        <span class="building-block-icon material-icons"> add </span>
        <p>
            <%= i18n.escapeRoom.steps.indications.front.catalog.addText%>
        </p>
    </button>

</div>
<br>
<div style="display:flex; justify-content:center">
    <dialog id="editDialog">
        <form  onsubmit="send(event,this)" action="/escapeRoom/<%=escapeRoom.id%>/assets" method="POST">
        </form>
    </dialog>
    <dialog id="reusablePuzzleDialog">
        <form method="POST" action="../reusablePuzzleInstance">
            <label> Name </label>
            <input type="text" name="name" />
            <label> Description </label>
            <input type="text" name="description" />
            </br>
            <label> Puzzle type </label>
            <select name="reusablePuzzleId">
            </select>
            </br>
            <h2>Configuration</h2>
        </form>
    </dialog>
</div>

<script>
    function toggleCatalogModal() {
        const configZone = $('#configZone');
        const configForm = $('#configForm');
        const resources = $('.sectionAddResource');

        configZone.attr('hidden', true);
        resources.removeAttr('hidden');

        $(".sections").scrollTop(0);
        const modal = $("#modalCatalogResource");
        if(modal.hasClass("active")) {
            $('body').css("overflow", "scroll");
        } else {
            $('body').css("overflow", "hidden");
            window.scrollTo(0, 0);
        }
        modal.toggleClass("active");

    }


    function editPuzzle(id, mime, jsonPuzzle) {
        let configJSON;
        try{
            configJSON = JSON.parse(jsonPuzzle.config);
        }catch{
            configJSON = {}
        }
        const puzzleid = jsonPuzzle.id;
        const name = jsonPuzzle.name;
        const reusablePuzzleId = jsonPuzzle.reusablePuzzleId;
        const description = jsonPuzzle.description;
        const puzzles = window.puzzles;
        const assignedPuzzle = puzzles.find(p => p.assignedReusablePuzzleInstance == jsonPuzzle.id) || null;
        const selectedValidator = assignedPuzzle ? assignedPuzzle.validator : (puzzles[0] ? puzzles[0].validator : null);

         fetch(`/uploads/reusablePuzzles/${reusablePuzzleId}/form.ejs`).then(res => {
            res.text().then((partial)=>{
                    const dialog = $('#editDialog');
                    const form = dialog.find('form');
                    form.attr('action', `./reusablePuzzleInstance/${puzzleid}`);
                    form.empty();
                    if (mime.search(reusableRegex) !== -1) {
                    form.append(`
                <div >
                    <p class="titleLabelEdit"> Name and description </p>
                    <div>
                        <label for="name">Name</label>
                            <input value="${jsonPuzzle.name ? jsonPuzzle.name : ''}" type="text"  name="name"/>
                     </div>
                    <div>
                        <label for="description">Descritption</label>
                            <input value="${jsonPuzzle.description ? jsonPuzzle.description : ''}" type="text"  name="description"/>
                     </div>
                    <p class="titleLabelEdit"> Medidas </p>
                    <div >
                    <div>
                        <label for="height">Height</label>
                        <div class="editUnit">
                            <input  value="${configJSON.height ? configJSON.height : ''}" type="number" name="height"/>
                            <p> px </p>
                        </div>
                     </div>
                    <div>
                        <label for="width">Width</label>
                        <div class="editUnit">
                            <input value="${configJSON.width ? configJSON.width : ''}" type="number" name="width"/>
                            <p> px </p>
                        </div>
                    </div>
                    </div>
                    <div>
                        <p class="titleLabelEdit"> Assigned Puzzle </p>
                            <select id="associatedPuzzle" onchange="setPuzzleSol(${puzzleid})"  name="puzzle">
                                    <option value="none">None</option>
                                    ${window.puzzles.map((puzzle,index) => {
                                        return `<option ${assignedPuzzle && assignedPuzzle.id === puzzle.id ? "selected": null} value="${puzzle.id}">${puzzle.title}</option>`
                                    }).join('')}
                                </select>
                    <div>
                        <div id="assignPuzzDiv" ${assignedPuzzle ? null: "hidden"} >
                                <label for="puzzleSol">Puzzle solution</label><input id="puzzleSol" value="${assignedPuzzle ? assignedPuzzle.sol  : ''}"  name="puzzleSol"/>
                            </div>
                                <span ${assignedPuzzle && assignedPuzzle.assignedReusablePuzzleInstance != puzzleid ? null : 'style="display: none"' }  id="warningSpan" title="Puzzle assigned to another instance" class="material-icons">
                                warning
                                </span>
                                  <select id="inputValidator" ${assignedPuzzle ? null : "hidden"} name="validator">
                                            <option value="exact" ${selectedValidator === "exact" ? "selected": null}>
                                                <%=i18n.escapeRoom.steps.puzzles.validator.exact%>
                                            </option>
                                            <option value="caseinsensitive" ${selectedValidator === "caseinsensitive"? "selected": null}} >
                                                <%=i18n.escapeRoom.steps.puzzles.validator.caseinsensitive%>
                                            </option>
                                            <option value="range" ${selectedValidator === "range"? "selected": null} >
                                                <%=i18n.escapeRoom.steps.puzzles.validator.range%>
                                            </option>
                                            <option value="regex" ${selectedValidator === "regex"? "selected": null} >
                                                <%=i18n.escapeRoom.steps.puzzles.validator.regex%>
                                            </option>
                                        </select>
                    </div>
                </div>
                </div>
                `);
                    }
                    form.append(partial);
                    form.append(` <input type="reset" />  <input class="editButton submit" type="submit" value="<%=i18n.common.save%>">`);
                    dialog.dialog({
                        modal: true,
                        position:['top'],
                        resizable: false,
                        position: { my: "middle", at: "top", of: $('#resourceCatalog')},
                        width: window.innerWidth > 900 ? 860 : window.innerWidth * 0.8,
                        height: "auto",
                        show: {
                            effect: "scale",
                            duration: 300
                        },
                        hide: {
                            effect: "scale",
                            duration: 300
                        },
                    }).show()
                })
            });
    }

    function setPuzzleSol(id) {
        const puzzleSol = $('#puzzleSol');
        const puzzleId = $('#associatedPuzzle').val();
        const span = $('#warningSpan');
        const validator = $('#inputValidator');
        const puzzleSelected = window.puzzles.find(p => p.id == puzzleId);
        const assignDiv = $('#assignPuzzDiv')

        if(puzzleSelected) {
            puzzleSol.val(puzzleSelected.sol)
            if (puzzleSelected.assignedReusablePuzzleInstance && puzzleSelected.assignedReusablePuzzleInstance != id) {
                span.show();
            }else {
                span.hide();
            }
            $(`#inputValidator option:selected`).attr("selected", "null");
            $(`#inputValidator option[value="${puzzleSelected.validator}"]`).attr("selected", "selected");
            assignDiv.show();
            validator.show()
        } else {
            puzzleSol.val("");
            span.hide();
            validator.hide()
            assignDiv.hide();
        }
    }

    function editAsset(id, mime, config) {
        const configJSON = parseAssetConfig(mime, config);
        const dialog = $('#editDialog');
        const form = dialog.find('form');
        form.attr('action', `./asset/${id}`);
        form.empty();
        if (mime.search(imageRegex) !== -1) {
            form.append(`
                    <div class="containerBlocksEdit">
                        <div>
                            <p class="titleLabelEdit"> Medidas </p>
                            <div class="editDialogForm">

                            <div>
                                <label for="height">Height</label>
                                <div class="editUnit">
                                    <input class="light" value="${configJSON.height ? configJSON.height : 0}" name="height"/>
                                    <p> px </p>
                                </div>
                            </div>
                            <div>
                                <label for="width">Width</label>
                                <div class="editUnit">
                                    <input class="light" type="number" value="${configJSON.width ? configJSON.width : 0}"  name="width"/>
                                    <p> px </p>
                                </div>
                            </div>
                        </div>
                    </div>`

                    );


        } else if (mime.search(videoRegex) !== -1) {
            form.append(`
            <div class="containerBlocksEdit">
            <div >
                <p class="titleLabelEdit"> Medidas </p>
                <div class="editDialogForm">
                <div>
                    <label for="height">Height</label>
                    <div class="editUnit">
                        <input class="light" type="number" value="${configJSON.height ? configJSON.height : 0}" name="height"/>
                        <p> px </p>
                    </div>
                 </div>
                <div>
                    <label for="width">Width</label>
                    <div class="editUnit">
                        <input class="light" type="number" value="${configJSON.width ? configJSON.width : 0}"  name="width"/>
                        <p> px </p>
                    </div>
                </div>
                </div>
                </div>
                <div>
                    <p class="titleLabelEdit"> Opciones </p>
                <div class="checkBoxEditContainer">
                    <div><label for="autoplay">Autoplay</label><input ${configJSON.autoplay!== "undefined" ? "checked" : ""} type="checkbox" name="autoplay"/></div>
                    <div><label for="download">Dowloads</label><input ${configJSON.download !== "undefined" ? "checked" : ""} type="checkbox" name="download"/></div>
                    <div><label for="controls">Controls</label><input  ${configJSON.controls !== "undefined" ? "checked" : ""} type="checkbox" name="controls"/></div>
                </div>
                </div>
                </div>
                `);
        } else if (mime.search(audioRegex) !== -1) {
            form.append(`
                        <div class="containerBlocksEdit">
            <div>
                 <p class="titleLabelEdit"> Opciones </p>
                 <div>
                <label for="controls">Controls</label>
                <input type="checkbox" ${configJSON.controls ? "checked" : ""} name="controls"/>
            </div>
                 </div>`);
        } else if (mime.search(pdfRegex) !== -1) {
            form.append(`
                    <div class="containerBlocksEdit">
                        <div>
                            <p class="titleLabelEdit"> Medidas </p>
                            <div class="editDialogForm">

                            <div>
                                <label for="height">Height</label>
                                <div class="editUnit">
                                    <input class="light" value="${configJSON.height ? configJSON.height : 0}" name="height"/>
                                    <p> px </p>
                                </div>
                            </div>
                            <div>
                                <label for="width">Width</label>
                                <div class="editUnit">
                                    <input class="light" type="number" value="${configJSON.width ? configJSON.width : 0}"  name="width"/>
                                    <p> px </p>
                                </div>
                            </div>
                        </div>
                    </div>`

                    );
        } else if (mime.search(webappRegex) !== -1) {
            form.append(`
                    <div class="containerBlocksEdit">
                        <div>
                            <p class="titleLabelEdit"> Medidas </p>
                            <div class="editDialogForm">

                            <div>
                                <label for="height">Height</label>
                                <div class="editUnit">
                                    <input class="light" value="${configJSON.height ? configJSON.height : 0}" name="height"/>
                                    <p> px </p>
                                </div>
                            </div>
                            <div>
                                <label for="width">Width</label>
                                <div class="editUnit">
                                    <input class="light" type="number" value="${configJSON.width ? configJSON.width : 0}"  name="width"/>
                                    <p> px </p>
                                </div>
                            </div>
                        </div>
                    </div>`

                    );
        }else {
            return `<div>${item.name}</div>`;
        }
        form.append(`<input class="editButton submit" type="submit" value="<%=i18n.common.save%>">`);
        dialog.dialog({
            modal: true,
            resizable: false,
            width: window.innerWidth > 900 ? 860 : window.innerWidth * 0.8,
            height: "auto",
            show: {
                effect: "scale",
                duration: 400
            },
            hide: {
                effect: "scale",
                duration: 400
            },
        }).show()
    }
    function parseAssetConfig(mime, config) {
        if (!config) return {};
        let texts = config.split(';');
        configJSON = {};
        texts.forEach(text => {
            const data = text.split(':');
            configJSON[data[0]] = data[1];
        })
        if (mime.search(imageRegex) !== -1) {
            return {
                width: configJSON.width,
                height: configJSON.height
            }
        } else if (mime.search(videoRegex) !== -1) {
            return {
                width: configJSON.width,
                height: configJSON.height,
                controls: configJSON.controls,
                autoplay: configJSON.autoplay,
                download: configJSON.download
            }
        } else if (mime.search(audioRegex) !== -1) {
            return {
                controls: configJSON.controls,
                autoplay: configJSON.autoplay,
            }
        } else if (mime.search(pdfRegex) !== -1) {
            return {
                width: configJSON.width,
                height: configJSON.height,
            }
        } else if (mime.search(webappRegex) !== -1) {
            return {
                width: configJSON.width,
                height: configJSON.height,
            }
        } else if (mime.search(reusableRegex) !== -1) {
            return {
                width: configJSON.width,
                height: configJSON.height,
            }
        } else {
            return {};
        }
    }

    function createPuzzle() {

        dialog.dialog({
            modal: true,
            resizable: false,
            width: window.innerWidth > 900 ? 860 : window.innerWidth * 0.8,
            height: "auto",
            show: {
                effect: "scale",
                duration: 400
            },
            hide: {
                effect: "scale",
                duration: 400
            },
        }).show()
    }

    function deleteReusablePuzzleInstance(id) {
        fetch(`/escapeRooms/${escapeRoomId}/reusablePuzzleInstance/${id}`, {
            method: 'DELETE',
        }).then(response => {
            if (response.ok) {
                const asset = $(`#p-${id}`);
                asset.remove();
                overlayTrigger(id, false)
            }
        });
    }

    function copyURl(url) {
        navigator.clipboard.writeText(window.location.origin + url);

    }
    function insertContentBlock() {
        const text = `<p>${window.placeholder}</p>`
        insertAndScrollContent(0, 'text', { text }, puzzleList);
        window.scrollTo(0, $('.building-block').children().last().offset().top);
    }
    function insertAndScrollContent(index, type, payload, puzzles) {
        if(payload.url){
            payload.url = encodeURI(payload.url);
        }
        insertContent(index, type, payload, puzzles);
        window.scrollTo(0, $('.building-block').children().last().offset().top);
    }

    function insertGamification(index, type, payload, puzzles) {
        toggleCatalogModal();
        insertAndScrollContent(index, type, payload, puzzles);
    }

    function overlayTriggerCatalog(id, close) {
        const overlay = $('.overlay-trigger[data-id="' + id + '"]');
        overlay.hide();


        if (!close) {
            overlay.css("transform", `translateY(${overlay.height() / 1.2}px`);
            overlay.show();


            // Borrar overlay con click afuera
            // Espera un momento antes de agregar el listener, para evitar cierre inmediato
            setTimeout(() => {
                $(document).on('click.overlay', function (event) {
                    // 1. Verifica si el clic NO fue directamente sobre el overlay.
                    if (!overlay.is(event.target) && overlay.has(event.target).length === 0) { //2. Verifica si el clic NO fue en un hijo del overlay.
                        overlay.hide();
                        $(document).off('click.overlay'); // Elimina el evento después de ocultar el overlay
                    }
                });
            }, 50);
        }
    }

function openPuzzleConfiguration(puzzle, baseId){
    const configZone = $('#configZone');
    const config = JSON.parse(puzzle.config);
    const configForm = $('#configForm');
    const resources = $('.sectionAddResource');

    configForm.empty();
    configZone.removeAttr('hidden');
    resources.attr('hidden', true);
    if(config.url){
        fetch(config.url)
        .then(response => response.text())
        .then(textString => {
            let elements = textString;
            elements += `<input type="text" hidden value=${baseId} name="reusablePuzzleId"/>`;
            elements += `<button type="button" onclick="volver()">Volver</button>`;
            elements += `<input type="submit" value="<%=i18n.common.save%>"/>`;
            configForm.html(((`
                <div >
                <div class="editDialog">
                    <p class="titleLabelEdit"> Name and description </p>
                    <div>
                        <label for="name">Name</label>
                            <input  type="text"  name="name"/>
                     </div>
                    <div>
                        <label for="description">Descritption</label>
                            <input  type="text"  name="description"/>
                     </div>
                    <p class="titleLabelEdit"> Medidas </p>
                    <div >
                    <div>
                        <label for="height">Height</label>
                        <div class="editUnit">
                            <input   type="number" name="height"/>
                            <p> px </p>
                        </div>
                     </div>
                    <div>
                        <label for="width">Width</label>
                        <div class="editUnit">
                            <input  type="number" name="width"/>
                            <p> px </p>
                        </div>
                    </div>
                    </div>
                    </div>
                    <div>
                        <p class="titleLabelEdit"> Assigned Puzzle </p>
                            <select id="associatedPuzzle" onchange="setPuzzleSol(${puzzle.id})"  name="puzzle">
                                    ${window.puzzles.map((puzzle,index) => {
                                        return `<option value="${puzzle.id}">${puzzle.title}</option>`
                                    }).join('')}
                                </select>
                                <div>
                                <label for="puzzleSol">Puzzle solution</label><input id="puzzleSol" value=${puzzles ? puzzles[0].sol : ""}  name="puzzleSol"/>
                                <span ${puzzles && puzzles[0]?.assignedReusablePuzzleInstance && puzzles[0]?.assignedReusablePuzzleInstance != puzzle.id ? null : 'style="display: none"' }  id="warningSpan" title="Puzzle assigned to another instance" class="material-icons">
                                warning
                                </span>
                                  <select name="validator">
                                            <option value="exact" ${puzzles && puzzles[0]?.validator && puzzles[0].validator === 'exact' ? "selected" : null }>
                                                <%=i18n.escapeRoom.steps.puzzles.validator.exact%>
                                            </option>
                                            <option value="caseinsensitive" ${puzzles && puzzles[0]?.validator && puzzles[0].validator === "caseinsensitive" ?  "selected" : null } >
                                                <%=i18n.escapeRoom.steps.puzzles.validator.caseinsensitive%>
                                            </option>
                                            <option value="range" ${puzzles && puzzles[0]?.validator && puzzles[0].validator === 'range' ? "selected"  : null } >
                                                <%=i18n.escapeRoom.steps.puzzles.validator.range%>
                                            </option>
                                            <option value="regex" ${puzzles && puzzles[0]?.validator && puzzles[0].validator === 'regex' ? "selected"  : null } >
                                                <%=i18n.escapeRoom.steps.puzzles.validator.regex%>
                                            </option>
                                        </select>
                                    </div>
                    </div>
                    </div>
                `)))
            configForm.append(elements);
            $(".sections").scrollTop(0);
        });
    }else {
        elements = generateConfig(config);
        elements += `<input type="text" hidden value=${baseId} name="reusablePuzzleId"/>`;
        elements += `<button type="button" onclick="volver()">Volver</button>`;
        elements += `<button type="reset" >Volver</button>`;
        elements += `<input type="submit" value="<%=i18n.common.save%>"/>`;
        configForm.html(elements);
        $(".sections").scrollTop(0);
    }
}

function volver(){
    const configZone = $('#configZone');
    const configForm = $('#configForm');
    const resources = $('.sectionAddResource');

    configZone.attr('hidden', true);
    resources.removeAttr('hidden');
}

let types = [];
function generateConfig(config) {
    let result = `<input type="text" name="name" required/>`;
    const configToRender = config.confg;
    types = config.types;
    result += configToRender.map(item => {return renderConfig(item)}).join('');
    return result;
}


function renderConfig(item, depth=0, inputName=""){
    const type = item.type;
    let config;
    const isArray = type.substring(type.length-6) === '-array';
    const arraySubtype = isArray ? type.substring(0,type.length-6) : null;

    if(isArray){
        types.map(t=>{if(t.type === arraySubtype){config = t.config; return;}})
    } else {
        types.map(t=>{if(t.type === type){config = t.config; return;}})
    }

    let inputNameN = inputName.length !==0 ? `${inputName}-${item.name}` : item.name;
    let returnVal = "";

    if(type === "text" || type === "number" || type === "checkbox"){
        returnVal = `<div>${item.name}<input type=${item.type} name="${inputNameN}"/>  </div>`;
    }else {
        let depthN = depth + 1;
        if(isArray){
            inputNameIndex = `${inputNameN}-0`;
            if(arraySubtype === "text" || arraySubtype === "number" || arraySubtype === "checkbox"){
                returnVal = `<div id=${inputNameN}>
                ${item.name}
                </div>
                <button type="button" onclick="addInput('${inputNameN}','${arraySubtype}')">+</button>
                `;
            }else{
                const childElement = config.map((el) => { return renderConfig(el, depthN,inputNameIndex); }).join('');
                returnVal = `<div id=${inputNameN}>
                ${item.name }<div>${childElement}</div>
                </div>
                <button type="button" onclick="addInput('${inputNameN}','${arraySubtype}')">+</button>
                `
            }
        } else {
            const childElement = config.map((el) => { return renderConfig(el, depthN, inputNameN); }).join('');
            returnVal = `<div>${item.name }${childElement}</div>`
        }
    }

    return `<div style="z-index:${depth};margin-left:${20*depth}px"> ${returnVal}</div>`;
}


function addInput(name, type){
    const index = $(`#${name}`).children().length;
    const newName = `${name}-${index}`;
    let newConfig = renderConfig({name:newName,type})
    $(`#${name}`).append(newConfig);
}

function send(e,form) {
    fetch(form.action, {method:'post', body: new URLSearchParams(new FormData(form))})
    .then((res)=>{
        if(res.status !== 200){
            return;
        }
        res.json().then((resJSON)=>{
            const row = $('#resourceCatalog').find((`#${resJSON.id}`))
            const editButton = row.find('.editButton');
            const addButton = row.find('.addButton');
            const regex = new RegExp(/(.*\(.*) ("[^"]*")(.*)/);
            editButton.attr('onclick', editButton.attr('onclick').replace(regex, `$1 "${resJSON.config}" $3`));
            addButton.attr('onclick', addButton.attr('onclick').replace(regex, `$1 "${resJSON.config}" $3`));
            })
    });
    e.preventDefault();
    $('#editDialog').dialog('close');
}


</script>
